CREATE OR REPLACE PROCEDURE PR_ADD_OTHER_BANK_ACCOUNT(
    V_MEMBER_ID MEMBER.ID%TYPE,
    V_BANKCODE  COMM_CODE.CODE%TYPE
)
AS
    V_PHONE     MEMBER.PHONE%TYPE;
    V_EXISTS    NUMBER(3);
BEGIN
    SELECT PHONE INTO V_PHONE FROM MEMBER WHERE ID = V_MEMBER_ID;
    
    IF V_BANKCODE = 3 THEN
        -- HJ은행
        -- 해당 핸드폰의 멤버의 아이디 가져와서 해당 ID의 계좌들 가져오기
        FOR R_CUR_ACCOUNT IN (
            SELECT ACCOUNT_NUMBER FROM O_ACCOUNT@ORCL_TO_HJORCL_LINK 
            WHERE ID = (SELECT ID FROM O_MEMBER@ORCL_TO_HJORCL_LINK WHERE TEL = V_PHONE))
        
        LOOP
            SELECT COUNT(*) INTO V_EXISTS FROM CONNECTED_ACCT WHERE ACCOUNT_NO = R_CUR_ACCOUNT.ACCOUNT_NUMBER;
            
            IF V_EXISTS = 0 THEN
                INSERT INTO CONNECTED_ACCT(BANKCODE, ACCOUNT_NO, MEMBER_ID) VALUES(V_BANKCODE, R_CUR_ACCOUNT.ACCOUNT_NUMBER, V_MEMBER_ID);
            END IF;    
        END LOOP;
        
    ELSIF V_BANKCODE = 1 THEN
        -- SK은행
         -- 해당 핸드폰의 멤버의 아이디 가져와서 해당 ID의 계좌들 가져오기
        FOR R_CUR_ACCOUNT IN (
            SELECT ACCOUNT_NO FROM K_ACCOUNT@ORCL_TO_SYORCL_LINK 
            WHERE ID = (SELECT ID FROM K_MEMBER@ORCL_TO_SYORCL_LINK WHERE REPLACE(PHONE, '-', '') = V_PHONE))
        
        LOOP
            SELECT COUNT(*) INTO V_EXISTS FROM CONNECTED_ACCT WHERE ACCOUNT_NO = R_CUR_ACCOUNT.ACCOUNT_NO;
            
            IF V_EXISTS = 0 THEN
                INSERT INTO CONNECTED_ACCT(BANKCODE, ACCOUNT_NO, MEMBER_ID) VALUES(V_BANKCODE, R_CUR_ACCOUNT.ACCOUNT_NO, V_MEMBER_ID);
            END IF;    
        END LOOP;
        
    ELSIF V_BANKCODE = 4 THEN
        -- SM은행
        -- 해당 핸드폰의 멤버의 아이디 가져와서 해당 ID의 계좌들 가져오기
        FOR R_CUR_ACCOUNT IN (
            SELECT ACCOUNT_NO FROM SM_ACCOUNT@ORCL_TO_SMORCL_LINK 
            WHERE ID = (SELECT ID FROM SM_MEMBER@ORCL_TO_SMORCL_LINK WHERE REPLACE(PHONE, '-', '') = V_PHONE))
        
        LOOP
            SELECT COUNT(*) INTO V_EXISTS FROM CONNECTED_ACCT WHERE ACCOUNT_NO = R_CUR_ACCOUNT.ACCOUNT_NO;
            
            IF V_EXISTS = 0 THEN
                INSERT INTO CONNECTED_ACCT(BANKCODE, ACCOUNT_NO, MEMBER_ID) VALUES(V_BANKCODE, R_CUR_ACCOUNT.ACCOUNT_NO, V_MEMBER_ID);
            END IF;    
        END LOOP;
    END IF;
    
    COMMIT;
    
    EXCEPTION
      WHEN OTHERS THEN
        WRITE_LOG('PR_ADD_OTHER_BANK_ACCOUNT', SQLERRM, 'ID : '||V_MEMBER_ID||'BANKCODE : '||V_BANKCODE);
        ROLLBACK;
END;
/


SELECT * FROM K_ACCOUNT@ORCL_TO_SYORCL_LINK;            
EXEC PR_ADD_OTHER_BANK_ACCOUNT(2340529477, 01);

SELECT * FROM K_ACCOUNT@ORCL_TO_HJORCL_LINK; 
EXEC PR_ADD_OTHER_BANK_ACCOUNT(2340529477, 03);

SELECT * FROM SM_ACCOUNT@ORCL_TO_SMORCL_LINK;    
SELECT * FROM SM_MEMBER@ORCL_TO_SMORCL_LINK;  
EXEC PR_ADD_OTHER_BANK_ACCOUNT(2340529477, 04);

DESC CONNECTED_ACCT;
SELECT * FROM CONNECTED_ACCT;

DELETE FROM CONNECTED_ACCT;
COMMIT;

SELECT * FROM EXCEPTION_LOG;

            SELECT ACCOUNT_NO FROM SM_ACCOUNT@ORCL_TO_SMORCL_LINK 
            WHERE ID = (SELECT ID FROM SM_MEMBER@ORCL_TO_SMORCL_LINK WHERE REPLACE(PHONE, '-', '') = 01026093796);
            
            SELECT ACCOUNT_NO FROM SM_ACCOUNT@ORCL_TO_SMORCL_LINK 
            WHERE ID = (SELECT ID FROM SM_ACCOUNT@ORCL_TO_SMORCL_LINK WHERE REPLACE(PHONE, '-', '') = 01026093796);

SELECT ID FROM K_MEMBER@ORCL_TO_SYORCL_LINK WHERE REPLACE(PHONE, '-', '') = 01026093796;

SELECT ACCOUNT_NO FROM K_ACCOUNT@ORCL_TO_SYORCL_LINK 
            WHERE ID = (SELECT ID FROM K_MEMBER@ORCL_TO_SYORCL_LINK WHERE REPLACE(PHONE, '-', '') = '01026093796');
            
            SELECT ID FROM K_MEMBER@ORCL_TO_SYORCL_LINK WHERE REPLACE(PHONE, '-', '') = '01026093796';
            SELECT ACCOUNT_NO FROM K_ACCOUNT@ORCL_TO_SYORCL_LINK 
            WHERE ID = 'yk';
            
            select * from k_account@ORCL_TO_SYORCL_LINK;
            
            select * from o_tRansaction_history@ORCL_TO_HJORCL_LINK order by transaction_date desc;
            
             ORCL_TO_HJORCL_LINK