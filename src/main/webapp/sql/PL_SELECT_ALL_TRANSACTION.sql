CREATE OR REPLACE PROCEDURE PR_SELECT_ALL_TRANSACTION(
    V_BANKCODE      TRANSACTION_DETAIL.DEAL_BANKCODE%TYPE,
    V_ACCOUNT_NO    TRANSACTION_DETAIL.ACTIVE_ACCT_NO%TYPE,
    CUR_TRANSACTION OUT SYS_REFCURSOR
)
AS
BEGIN

    IF V_BANKCODE = 2 THEN
        OPEN CUR_TRANSACTION FOR
        SELECT TRANSACTION_SEQ
            , ACTIVE_ACCT_NO
            , TYPE
            , NAME
            , DEAL_NAME
            , AMOUNT
            , BALANCE
            , DEAL_BANKCODE
            , DEAL_ACCT_NO
            , TO_CHAR(REG_DATE, 'YYYY-MM-DD') AS REG_DATE
        FROM TRANSACTION_DETAIL
        WHERE ACTIVE_ACCT_NO = V_ACCOUNT_NO
        ORDER BY TRANSACTION_SEQ DESC;
        
    ELSIF V_BANKCODE = 1 THEN
        OPEN CUR_TRANSACTION FOR
        SELECT TRANS_NO AS TRANSACTION_SEQ
            , MYACCOUNT_NO AS ACTIVE_ACCT_NO
            , TRANS_TYPE AS TYPE
            , TARGET_NAME AS NAME
            , TARGET_NAME AS DEAL_NAME
            , TRANS_AMOUNT AS AMOUNT
            , MY_BALANCE AS BALANCE
            , TARGET_BANKCODE AS DEAL_BANKCODE
            , TARGET_ACCOUNT AS DEAL_ACCT_NO
            , TO_CHAR(TRANS_DATE, 'YYYY-MM-DD') AS REG_DATE
        FROM K_TRANSACTION@ORCL_TO_SYORCL_LINK
        WHERE MYACCOUNT_NO = V_ACCOUNT_NO
        ORDER BY TRANSACTION_SEQ DESC;
        
    ELSIF V_BANKCODE = 3 THEN
        OPEN CUR_TRANSACTION FOR
        SELECT HISTORY_NO AS TRANSACTION_SEQ
            , ACCOUNT_NUMBER AS ACTIVE_ACCT_NO
            , TRANSACTION_TYPE AS TYPE
            , TRADER AS NAME
            , TRADER AS DEAL_NAME
            , TRANSACTION_AMOUNT AS AMOUNT
            , BALANCE AS BALANCE
            , NULL AS DEAL_BANKCODE
            , NULL AS DEAL_ACCT_NO
            , TO_CHAR(TRANSACTION_DATE, 'YYYY-MM-DD') AS REG_DATE
        FROM O_TRANSACTION_HISTORY@ORCL_TO_HJORCL_LINK
        WHERE ACCOUNT_NUMBER = V_ACCOUNT_NO
        ORDER BY TRANSACTION_SEQ DESC;
        
    ELSIF V_BANKCODE = 4 THEN
        OPEN CUR_TRANSACTION FOR
        SELECT HISTORY_NO AS TRANSACTION_SEQ
            , SEND_ACCOUNT AS ACTIVE_ACCT_NO
            , 'O' AS TYPE
            , '출금' AS NAME
            , '입금' DEAL_NAME
            , AMOUNT
            , NULL AS BALANCE
            , RECEIVE_BANK_CODE AS DEAL_BANKCODE
            , RECEIVE_ACCOUNT AS DEAL_ACCT_NO
            , SIGN_DATE AS REG_DATE
        FROM SM_HISTORY@ORCL_TO_SMORCL_LINK
        WHERE SEND_ACCOUNT = V_ACCOUNT_NO
        UNION
        SELECT HISTORY_NO AS TRANSACTION_SEQ
            , RECEIVE_ACCOUNT AS ACTIVE_ACCT_NO
            , 'I' AS TYPE
            , '입금' AS NAME
            , '출금' DEAL_NAME
            , AMOUNT
            , NULL AS BALANCE
            , SEND_BANK_CODE AS DEAL_BANKCODE
            , SEND_ACCOUNT AS DEAL_ACCT_NO
            , SIGN_DATE AS REG_DATE
        FROM SM_HISTORY@ORCL_TO_SMORCL_LINK
        WHERE RECEIVE_ACCOUNT = V_ACCOUNT_NO
        ORDER BY TRANSACTION_SEQ DESC;
    END IF;
END;
/

DESC TRANSACTION_DETAIL;
DELETE FROM TRANSACTION_DETAIL;
SELECT DEAL_BANKCODE FROM TANSACTION_DETAIL;

VARIABLE A_CUR REFCURSOR;
EXEC PR_SELECT_ALL_TRANSACTION(2, '13900000000001', :A_CUR)
PRINT :A_CUR


VARIABLE A_CUR REFCURSOR;
EXEC PR_SELECT_ALL_TRANSACTION(1, '001-1923-0000', :A_CUR)
PRINT :A_CUR

VARIABLE A_CUR REFCURSOR;
EXEC PR_SELECT_ALL_TRANSACTION(3, '0311512110797806', :A_CUR)
PRINT :A_CUR

VARIABLE A_CUR REFCURSOR;
EXEC PR_SELECT_ALL_TRANSACTION(4, '010-2609-3796', :A_CUR)
PRINT :A_CUR

SELECT * FROM CONNECTED_ACCT;

COMMIT;

SELECT * FROM EXCEPTION_LOG;

select * from transaction_detail order by transaction_seq;